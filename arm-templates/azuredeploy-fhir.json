{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the FHIR service Web App."
            }
        },
        "isSecondary": {
            "defaultValue": false,
            "type":"bool"
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of App Service Plan (existing or new). If empty, a name will be generated."
            }
        },
        "appServicePlanSku": {
            "type": "string",
            "allowedValues": [
                "F1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1V2",
                "P2V2",
                "P3V2",
                "P1V3",
                "P2V3",
                "P3V3"
            ],
            "defaultValue": "P1V2"
        },
        "securityAuthenticationAuthority": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "OAuth Authority"
            }
        },
        "securityAuthenticationAudience": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Audience (aud) to validate in JWT"
            }
        },
        "enableAadSmartOnFhirProxy": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable Azure AAD SMART on FHIR Proxy"
            }
        },
        "deployApplicationInsights": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Deploy Application Insights for the FHIR server. Disabled for Microsoft Azure Government (MAG)"
            }
        },
        "applicationInsightsLocation": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "southeastasia",
                "northeurope",
                "westeurope",
                "eastus",
                "southcentralus",
                "westus2",
                "usgovvirginia",
                "usgovarizona"
            ]
        },
        "additionalFhirServerConfigProperties": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Additional configuration properties for the FHIR server. In the form {\"path1\":\"value1\",\"path2\":\"value2\"}"
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the sql admin user if using SQL server."
            }
        },
        "fhirVersion": {
            "type": "string",
            "defaultValue": "R4",
            "allowedValues": [
                "Stu3",
                "R4",
                "R5"
            ],
            "metadata": {
                "description": "Only applies when MsdeployPackageUrl is not specified."
            }
        },
        "imageTag": {
            "type": "string",
            "defaultValue": "release",
            "metadata": {
                "description":  "Tag of the docker image to deploy."
            }
        },
        "enableExport": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Determines whether export will be enabled for this fhir instance. If true, a storage account will be created as part of the deployment. You will need owner or user-administrator permissions for this."
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Environment": "Prod",
                "Project": "FHIR Server"
            }
        },
        "sqlSchemaAutomaticUpdatesEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Determine whether the sql schema should be automatically upgraded on server startup. If false, sql schema will not be initialized or upgraded on the server startup. The schema migration tool will be required to perform initialize or upgrade. If true, sql schema will be upgraded to the maximum supported version."
            }
        }
    },
    "variables": {
        "isMAG": "[or(contains(resourceGroup().location,'usgov'),contains(resourceGroup().location,'usdod'))]",
        "serviceName": "[concat(toLower(parameters('serviceName')), '-fhir' ,if(parameters('isSecondary'),'-s',''))]",
        "keyvaultEndpoint": "[if(variables('isMAG'), concat('https://', variables('serviceName'), '.vault.usgovcloudapi.net/'), concat('https://', variables('serviceName'), '.vault.azure.net/'))]",
        "appServicePlanName": "[if(empty(parameters('appServicePlanName')),concat(variables('serviceName'),'-fhir-asp'),parameters('appServicePlanName'))]",
        "appServiceResourceId": "[resourceId('Microsoft.Web/sites', variables('serviceName'))]",
        "securityAuthenticationEnabled": "[and(not(empty(parameters('securityAuthenticationAuthority'))),not(empty(parameters('securityAuthenticationAudience'))))]",
        "deployAppInsights": "[parameters('deployApplicationInsights')]",
        "appInsightsName": "[concat('AppInsights-', variables('serviceName'))]",
        "storageBlobDataContributerRoleId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "blobStorageUri": "[if(variables('isMAG'), '.blob.core.usgovcloudapi.net', '.blob.core.windows.net')]",
        "staticFhirServerConfigProperties": {
            "APPINSIGHTS_PORTALINFO": "ASP.NETCORE",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
            "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
            "WEBSITE_NODE_DEFAULT_VERSION": "6.9.4",
            "KeyVault__Endpoint": "[variables('keyvaultEndpoint')]",
            "FhirServer__Security__Enabled": "[variables('securityAuthenticationEnabled')]",
            "FhirServer__Security__EnableAadSmartOnFhirProxy": "[parameters('enableAadSmartOnFhirProxy')]",
            "FhirServer__Security__Authentication__Authority": "[parameters('securityAuthenticationAuthority')]",
            "FhirServer__Security__Authentication__Audience": "[parameters('securityAuthenticationAudience')]",
            "CosmosDb__ContinuationTokenSizeLimitInKb": "1",
            "SqlServer__Initialize": "true",
            "SqlServer__SchemaOptions__AutomaticUpdatesEnabled": "[parameters('sqlSchemaAutomaticUpdatesEnabled')]",
            "DataStore": "SqlServer",
            "FhirServer__Operations__Export__Enabled": "[parameters('enableExport')]",
            "FhirServer__Operations__Export__StorageAccountUri": "[if(parameters('enableExport'), concat('https://', variables('storageAccountName'), variables('blobStorageUri')), 'null')]"
        },
        "combinedFhirServerConfigProperties": "[union(variables('staticFhirServerConfigProperties'), parameters('additionalFhirServerConfigProperties'))]",
        "computedSqlServerReference": "[concat('Microsoft.Sql/servers/', variables('serviceName'))]",
        "storageAccountName": "[concat(substring(replace(variables('serviceName'), '-', ''), 0, min(11, length(replace(variables('serviceName'), '-', '')))), uniquestring(resourceGroup().id, variables('serviceName')))]",
        "registryName": "healthplatformregistry.azurecr.io"
    },
    "resources": [
        {
            "condition": "[not(parameters('isSecondary'))]",
            "apiVersion": "2018-02-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "kind": "linux",
            "tags": "[parameters('resourceTags')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('appServicePlanSku')]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "reserved": true
            }
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Web/sites",
            "tags": "[parameters('resourceTags')]",
            "name": "[variables('serviceName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId":  "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "name": "[variables('serviceName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[concat('https://', variables('registryName'))]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": ""
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": ""
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "true"
                        }
                    ]
                }
            },
            "dependsOn": [
              "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2018-02-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[variables('appServiceResourceId')]",
                        "[if(variables('deployAppInsights'),concat('Microsoft.Insights/components/', variables('appInsightsName')),resourceId('Microsoft.KeyVault/vaults', variables('serviceName')))]",
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('serviceName'), 'SqlServer--ConnectionString')]"
                    ],
                    "properties": "[if(variables('deployAppInsights'), union(variables('combinedFhirServerConfigProperties'), json(concat('{\"ApplicationInsights__InstrumentationKey\": \"', reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey, '\"}'))), variables('combinedFhirServerConfigProperties'))]"
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "appsettings",
                        "[variables('appServiceResourceId')]",
                        "[if(variables('deployAppInsights'),concat('Microsoft.Insights/components/', variables('appInsightsName')),resourceId('Microsoft.KeyVault/vaults', variables('serviceName')))]"
                    ],
                    "properties": {
                        "linuxFxVersion": "[concat('DOCKER|', variables('registryName'), '/', toLower(parameters('fhirVersion')), '_fhir-server',':', parameters('imageTag'))]",
                        "appCommandLine": "azure-fhir-api",
                        "alwaysOn": true
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('applicationInsightsLocation')]",
            "condition": "[variables('deployAppInsights')]",
            "kind": "web",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('serviceName')]"
            }
        },
        {
            "name": "[variables('serviceName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "administratorLogin": "fhirAdmin",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "apiVersion": "2017-03-01-preview",
                    "dependsOn": [
                        "[variables('serviceName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "tags": "[parameters('resourceTags')]",
                    "name": "FHIR",
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS"
                    },
                    "sku": {
                        "name": "Standard",
                        "tier": "Standard",
                        "capacity": 200
                    },
                    "type": "databases"
                },
                {
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[variables('serviceName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('serviceName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                        "objectId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list",
                                "set"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false
            },
            "dependsOn": [
                "[variables('appServiceResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/SqlServer--ConnectionString')]",
            "apiVersion": "2015-06-01",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "contentType": "text/plain",
                "value": "[concat('Server=tcp:', reference(variables('computedSqlServerReference'), '2015-05-01-preview').fullyQualifiedDomainName,',1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=', reference(variables('computedSqlServerReference'), '2015-05-01-preview').administratorLogin,';Password=',parameters('sqlAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('serviceName'))]",
                "[resourceId('Microsoft.Sql/servers', variables('serviceName'))]"
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "supportsHttpsTrafficOnly": true
            },
            "condition": "[parameters('enableExport')]",
            "dependsOn": [
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(variables('storageAccountName'), parameters('fhirVersion'), variables('serviceName')))]",
            "condition": "[parameters('enableExport')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[variables('serviceName')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataContributerRoleId')]",
                "principalId": "[reference(concat('Microsoft.Web/sites/', variables('serviceName')), '2018-11-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        }
    ]
}
